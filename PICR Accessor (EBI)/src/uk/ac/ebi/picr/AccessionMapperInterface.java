
package uk.ac.ebi.picr;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "AccessionMapperInterface", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AccessionMapperInterface {


    /**
     * 
     * @param taxonId
     * @param onlyActive
     * @param sequence
     * @param searchDatabases
     * @return
     *     returns uk.ac.ebi.picr.UPEntry
     */
    @WebMethod(action = "getUPIForSequence")
    @WebResult(name = "getUPIForSequenceReturn", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
    @RequestWrapper(localName = "getUPIForSequence", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetUPIForSequence")
    @ResponseWrapper(localName = "getUPIForSequenceResponse", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetUPIForSequenceResponse")
    public UPEntry getUPIForSequence(
        @WebParam(name = "sequence", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        String sequence,
        @WebParam(name = "searchDatabases", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        List<String> searchDatabases,
        @WebParam(name = "taxonId", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        String taxonId,
        @WebParam(name = "onlyActive", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        boolean onlyActive);

    /**
     * 
     * @param taxonId
     * @param onlyActive
     * @param acVersion
     * @param accession
     * @param searchDatabases
     * @return
     *     returns java.util.List<uk.ac.ebi.picr.UPEntry>
     */
    @WebMethod(action = "getUPIForAccession")
    @WebResult(name = "getUPIForAccessionReturn", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
    @RequestWrapper(localName = "getUPIForAccession", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetUPIForAccession")
    @ResponseWrapper(localName = "getUPIForAccessionResponse", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetUPIForAccessionResponse")
    public List<UPEntry> getUPIForAccession(
        @WebParam(name = "accession", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        String accession,
        @WebParam(name = "ac_version", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        String acVersion,
        @WebParam(name = "searchDatabases", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        List<String> searchDatabases,
        @WebParam(name = "taxonId", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        String taxonId,
        @WebParam(name = "onlyActive", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
        boolean onlyActive);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(action = "getMappedDatabaseNames")
    @WebResult(name = "mappedDatabases", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService")
    @RequestWrapper(localName = "getMappedDatabaseNames", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetMappedDatabaseNames")
    @ResponseWrapper(localName = "getMappedDatabaseNamesResponse", targetNamespace = "http://www.ebi.ac.uk/picr/AccessionMappingService", className = "uk.ac.ebi.picr.GetMappedDatabaseNamesResponse")
    public List<String> getMappedDatabaseNames();

}
